FROM {{ config.base_image }}

MAINTAINER Haowen Xu <haowen.xu@outlook.com>

# Install System dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get -y update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        openssh-client \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Python libraries
ARG PIP_OPTS=
ARG PYTHON_LIBRARY_BUILD_VERSION=1
ENV PIP_DEFAULT_TIMEOUT=120
RUN python -m pip install pip --upgrade && \
    python --version && \
    python -m pip --version && \
    python -m pip install ${PIP_OPTS} --no-cache-dir --upgrade \
        numpy==1.14.5 scipy sympy pandas tables scikit-learn matplotlib==2.0.2 ipython[all] tqdm \
        seaborn pillow imageio PyYAML sqlalchemy pymongo jinja2 scikit-image scipy progressbar2 mock pep8 coverage \
        mako Flask GitPython tinydb tinydb-serialization hashfs fs opencv-python lmdb gunicorn \
        bokeh dask distributed joblib \
    && \
    python -m pip install ${PIP_OPTS} --no-cache-dir torchvision && \
    python -m pip install ${PIP_OPTS} --no-cache-dir \
        tensorflow{% if config.variant == 'gpu' %}-gpu{% endif %}=={{ config.tensorflow_version }} keras \
        torch torchvision \
    && \
    python -m pip install ${PIP_OPTS} --no-cache-dir rpy2 && \
    rm -rf /root/.cache

# Install R libraires
ARG R_LIBRARY_BUILD_VERSION=1
RUN R --version && \
    echo "broom\n\
        DBI\n\
        dbplyr\n\
        dplyr\n\
        hexbin\n\
        ggplot2\n\
        lme4\n\
        RSQLite\n\
        tidyr" > /tmp/rpacks.txt && \
    R -e 'install.packages(sub("(.+)\\\\n","\\1", scan("/tmp/rpacks.txt", "character")), repos="'"${CRAN_MIRROR}"'")' && \
    rm /tmp/rpacks.txt && \
    rm -rf /root/.cache

# Install Jupyterlab and other Jupyter extensions
ARG JUPYTER_BUILD_VERSION=2
RUN pip install ${PIP_OPTS} --no-cache-dir jupyterlab jupyter_nbextensions_configurator jupyter_contrib_nbextensions && \
    jupyter contrib nbextension install --sys-prefix && \
    jupyter nbextensions_configurator enable --sys-prefix && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    rm -rf /root/.cache

## Install Spark libraries
#ARG APACHE_MIRROR=https://www.apache.org/dist
#ARG SPARK_LIBRARY_BUILD_VERSION=1
#RUN wget -O /tmp/spark-{{ config.spark_version }}-bin-hadoop{{ config.hadoop_version }}.tgz ${APACHE_MIRROR}/spark/spark-{{ config.spark_version }}/spark-{{ config.spark_version }}-bin-hadoop{{ config.hadoop_version }}.tgz && \
#    mkdir -p /opt && cd /opt && tar xvf /tmp/spark-{{ config.spark_version }}-bin-hadoop{{ config.hadoop_version }}.tgz && rm /tmp/spark-{{ config.spark_version }}-bin-hadoop{{ config.hadoop_version }}.tgz
#ENV SPARK_HOME="/opt/spark-{{ config.spark_version }}-bin-hadoop{{ config.hadoop_version }}"
#ENV PATH="${SPARK_HOME}/bin:${PATH}"

# Force invalidate the cache layer after this statement, such that
# these frequently updated libraries will get re-installed every time.
ARG CACHEBUST=1
RUN python -m pip install ${PIP_OPTS} --upgrade --no-cache-dir \
        git+https://github.com/thu-ml/zhusuan.git \
        git+https://github.com/haowen-xu/tfsnippet.git@develop \
        git+https://github.com/haowen-xu/mlsnippet.git \
        git+https://github.com/haowen-xu/mlstorage-client.git \
        git+https://github.com/facebookresearch/visdom.git \
    && \
    rm -rf /root/.cache

# Install the entry script
COPY entry.sh /
ENTRYPOINT ["/entry.sh"]
